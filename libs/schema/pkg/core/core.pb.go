// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: libs/schema/pkg/core/core.proto

package core

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Block_SignatureMode int32

const (
	Block_ONE_OF_ONE     Block_SignatureMode = 0
	Block_TWO_OF_THREE   Block_SignatureMode = 1
	Block_THREE_OF_THREE Block_SignatureMode = 2
	Block_THREE_OF_FIVE  Block_SignatureMode = 3
	Block_FIVE_OF_FIVE   Block_SignatureMode = 4
)

// Enum value maps for Block_SignatureMode.
var (
	Block_SignatureMode_name = map[int32]string{
		0: "ONE_OF_ONE",
		1: "TWO_OF_THREE",
		2: "THREE_OF_THREE",
		3: "THREE_OF_FIVE",
		4: "FIVE_OF_FIVE",
	}
	Block_SignatureMode_value = map[string]int32{
		"ONE_OF_ONE":     0,
		"TWO_OF_THREE":   1,
		"THREE_OF_THREE": 2,
		"THREE_OF_FIVE":  3,
		"FIVE_OF_FIVE":   4,
	}
)

func (x Block_SignatureMode) Enum() *Block_SignatureMode {
	p := new(Block_SignatureMode)
	*p = x
	return p
}

func (x Block_SignatureMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_SignatureMode) Descriptor() protoreflect.EnumDescriptor {
	return file_libs_schema_pkg_core_core_proto_enumTypes[0].Descriptor()
}

func (Block_SignatureMode) Type() protoreflect.EnumType {
	return &file_libs_schema_pkg_core_core_proto_enumTypes[0]
}

func (x Block_SignatureMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_SignatureMode.Descriptor instead.
func (Block_SignatureMode) EnumDescriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 0}
}

type Block_BlockType int32

const (
	Block_CREATE  Block_BlockType = 0
	Block_SEND    Block_BlockType = 1
	Block_RECEIVE Block_BlockType = 2
	Block_UPDATE  Block_BlockType = 3
)

// Enum value maps for Block_BlockType.
var (
	Block_BlockType_name = map[int32]string{
		0: "CREATE",
		1: "SEND",
		2: "RECEIVE",
		3: "UPDATE",
	}
	Block_BlockType_value = map[string]int32{
		"CREATE":  0,
		"SEND":    1,
		"RECEIVE": 2,
		"UPDATE":  3,
	}
)

func (x Block_BlockType) Enum() *Block_BlockType {
	p := new(Block_BlockType)
	*p = x
	return p
}

func (x Block_BlockType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Block_BlockType) Descriptor() protoreflect.EnumDescriptor {
	return file_libs_schema_pkg_core_core_proto_enumTypes[1].Descriptor()
}

func (Block_BlockType) Type() protoreflect.EnumType {
	return &file_libs_schema_pkg_core_core_proto_enumTypes[1]
}

func (x Block_BlockType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Block_BlockType.Descriptor instead.
func (Block_BlockType) EnumDescriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 1}
}

type Block struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          *Block_Body            `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	BlockHash     *Block_Hash            `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	Signatues     *Block_Signatures      `protobuf:"bytes,3,opt,name=signatues,proto3" json:"signatues,omitempty"`
	Work          *Block_Work            `protobuf:"bytes,4,opt,name=work,proto3" json:"work,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block) Reset() {
	*x = Block{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block) ProtoMessage() {}

func (x *Block) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block.ProtoReflect.Descriptor instead.
func (*Block) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0}
}

func (x *Block) GetBody() *Block_Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *Block) GetBlockHash() *Block_Hash {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *Block) GetSignatues() *Block_Signatures {
	if x != nil {
		return x.Signatues
	}
	return nil
}

func (x *Block) GetWork() *Block_Work {
	if x != nil {
		return x.Work
	}
	return nil
}

type PaymentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromAccountId []byte                 `protobuf:"bytes,1,opt,name=fromAccountId,proto3" json:"fromAccountId,omitempty"`
	ToAccountId   []byte                 `protobuf:"bytes,2,opt,name=toAccountId,proto3" json:"toAccountId,omitempty"`
	Amount        int64                  `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ReferenceCode []byte                 `protobuf:"bytes,4,opt,name=referenceCode,proto3" json:"referenceCode,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PaymentRequest) Reset() {
	*x = PaymentRequest{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentRequest) ProtoMessage() {}

func (x *PaymentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentRequest.ProtoReflect.Descriptor instead.
func (*PaymentRequest) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{1}
}

func (x *PaymentRequest) GetFromAccountId() []byte {
	if x != nil {
		return x.FromAccountId
	}
	return nil
}

func (x *PaymentRequest) GetToAccountId() []byte {
	if x != nil {
		return x.ToAccountId
	}
	return nil
}

func (x *PaymentRequest) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PaymentRequest) GetReferenceCode() []byte {
	if x != nil {
		return x.ReferenceCode
	}
	return nil
}

type FullBlock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Block         *Block                 `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Next          []byte                 `protobuf:"bytes,2,opt,name=next,proto3" json:"next,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullBlock) Reset() {
	*x = FullBlock{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullBlock) ProtoMessage() {}

func (x *FullBlock) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullBlock.ProtoReflect.Descriptor instead.
func (*FullBlock) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{2}
}

func (x *FullBlock) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *FullBlock) GetNext() []byte {
	if x != nil {
		return x.Next
	}
	return nil
}

type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        []byte                 `protobuf:"bytes,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetNodeId() []byte {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *Node) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type NodeAddress struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeAddress) Reset() {
	*x = NodeAddress{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeAddress) ProtoMessage() {}

func (x *NodeAddress) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeAddress.ProtoReflect.Descriptor instead.
func (*NodeAddress) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{4}
}

func (x *NodeAddress) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NodeAddress) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Block_PublicKeys struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SingatureMode Block_SignatureMode    `protobuf:"varint,1,opt,name=singatureMode,proto3,enum=flinkcoin.core.Block_SignatureMode" json:"singatureMode,omitempty"`
	PublicKey     [][]byte               `protobuf:"bytes,2,rep,name=publicKey,proto3" json:"publicKey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block_PublicKeys) Reset() {
	*x = Block_PublicKeys{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block_PublicKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_PublicKeys) ProtoMessage() {}

func (x *Block_PublicKeys) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_PublicKeys.ProtoReflect.Descriptor instead.
func (*Block_PublicKeys) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Block_PublicKeys) GetSingatureMode() Block_SignatureMode {
	if x != nil {
		return x.SingatureMode
	}
	return Block_ONE_OF_ONE
}

func (x *Block_PublicKeys) GetPublicKey() [][]byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

type Block_Body struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Version           int32                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp         int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockType         Block_BlockType        `protobuf:"varint,3,opt,name=blockType,proto3,enum=flinkcoin.core.Block_BlockType" json:"blockType,omitempty"`
	PreviousBlockHash []byte                 `protobuf:"bytes,4,opt,name=previousBlockHash,proto3" json:"previousBlockHash,omitempty"`
	AccountId         []byte                 `protobuf:"bytes,5,opt,name=accountId,proto3" json:"accountId,omitempty"`
	DelegatedNodeId   []byte                 `protobuf:"bytes,6,opt,name=delegatedNodeId,proto3" json:"delegatedNodeId,omitempty"`
	Balance           int64                  `protobuf:"varint,7,opt,name=balance,proto3" json:"balance,omitempty"`
	Amount            int64                  `protobuf:"varint,8,opt,name=amount,proto3" json:"amount,omitempty"`
	SendAccountId     []byte                 `protobuf:"bytes,9,opt,name=sendAccountId,proto3" json:"sendAccountId,omitempty"`
	ReceiveBlockHash  []byte                 `protobuf:"bytes,10,opt,name=receiveBlockHash,proto3" json:"receiveBlockHash,omitempty"`
	ReferenceCode     []byte                 `protobuf:"bytes,11,opt,name=referenceCode,proto3" json:"referenceCode,omitempty"`
	PublicKeys        *Block_PublicKeys      `protobuf:"bytes,12,opt,name=publicKeys,proto3" json:"publicKeys,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *Block_Body) Reset() {
	*x = Block_Body{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block_Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Body) ProtoMessage() {}

func (x *Block_Body) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Body.ProtoReflect.Descriptor instead.
func (*Block_Body) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Block_Body) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Block_Body) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *Block_Body) GetBlockType() Block_BlockType {
	if x != nil {
		return x.BlockType
	}
	return Block_CREATE
}

func (x *Block_Body) GetPreviousBlockHash() []byte {
	if x != nil {
		return x.PreviousBlockHash
	}
	return nil
}

func (x *Block_Body) GetAccountId() []byte {
	if x != nil {
		return x.AccountId
	}
	return nil
}

func (x *Block_Body) GetDelegatedNodeId() []byte {
	if x != nil {
		return x.DelegatedNodeId
	}
	return nil
}

func (x *Block_Body) GetBalance() int64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *Block_Body) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Block_Body) GetSendAccountId() []byte {
	if x != nil {
		return x.SendAccountId
	}
	return nil
}

func (x *Block_Body) GetReceiveBlockHash() []byte {
	if x != nil {
		return x.ReceiveBlockHash
	}
	return nil
}

func (x *Block_Body) GetReferenceCode() []byte {
	if x != nil {
		return x.ReferenceCode
	}
	return nil
}

func (x *Block_Body) GetPublicKeys() *Block_PublicKeys {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type Block_Signatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     [][]byte               `protobuf:"bytes,1,rep,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block_Signatures) Reset() {
	*x = Block_Signatures{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block_Signatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Signatures) ProtoMessage() {}

func (x *Block_Signatures) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Signatures.ProtoReflect.Descriptor instead.
func (*Block_Signatures) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Block_Signatures) GetSignature() [][]byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type Block_Hash struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hash          []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block_Hash) Reset() {
	*x = Block_Hash{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block_Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Hash) ProtoMessage() {}

func (x *Block_Hash) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Hash.ProtoReflect.Descriptor instead.
func (*Block_Hash) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 3}
}

func (x *Block_Hash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

type Block_Work struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Work          []byte                 `protobuf:"bytes,1,opt,name=work,proto3" json:"work,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Block_Work) Reset() {
	*x = Block_Work{}
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Block_Work) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Block_Work) ProtoMessage() {}

func (x *Block_Work) ProtoReflect() protoreflect.Message {
	mi := &file_libs_schema_pkg_core_core_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Block_Work.ProtoReflect.Descriptor instead.
func (*Block_Work) Descriptor() ([]byte, []int) {
	return file_libs_schema_pkg_core_core_proto_rawDescGZIP(), []int{0, 4}
}

func (x *Block_Work) GetWork() []byte {
	if x != nil {
		return x.Work
	}
	return nil
}

var File_libs_schema_pkg_core_core_proto protoreflect.FileDescriptor

var file_libs_schema_pkg_core_core_proto_rawDesc = string([]byte{
	0x0a, 0x1f, 0x6c, 0x69, 0x62, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0xc6, 0x08, 0x0a, 0x05, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x6e,
	0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x2e, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b,
	0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x52,
	0x04, 0x77, 0x6f, 0x72, 0x6b, 0x1a, 0x75, 0x0a, 0x0a, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x73, 0x69, 0x6e, 0x67, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x66, 0x6c, 0x69,
	0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x52,
	0x0d, 0x73, 0x69, 0x6e, 0x67, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x1a, 0xdf, 0x03, 0x0a,
	0x04, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x3d, 0x0a,
	0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65,
	0x67, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x6e, 0x64, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0a,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x73, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x73, 0x1a, 0x2a,
	0x0a, 0x0a, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x1a, 0x1a, 0x0a, 0x04, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x1a, 0x1a, 0x0a, 0x04, 0x57, 0x6f, 0x72, 0x6b, 0x12, 0x12,
	0x0a, 0x04, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x77, 0x6f,
	0x72, 0x6b, 0x22, 0x6a, 0x0a, 0x0d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x4f, 0x4e, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x57, 0x4f, 0x5f, 0x4f, 0x46, 0x5f, 0x54, 0x48,
	0x52, 0x45, 0x45, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x48, 0x52, 0x45, 0x45, 0x5f, 0x4f,
	0x46, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x48, 0x52,
	0x45, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c,
	0x46, 0x49, 0x56, 0x45, 0x5f, 0x4f, 0x46, 0x5f, 0x46, 0x49, 0x56, 0x45, 0x10, 0x04, 0x22, 0x3a,
	0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x43,
	0x52, 0x45, 0x41, 0x54, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x4e, 0x44, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x0a,
	0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x22, 0x96, 0x01, 0x0a, 0x0e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x74, 0x6f, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x22, 0x4c, 0x0a, 0x09, 0x46, 0x75, 0x6c, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x2b, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2e, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x6e, 0x65, 0x78,
	0x74, 0x22, 0x3c, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x22,
	0x31, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x66, 0x6c, 0x69, 0x6e, 0x6b, 0x63, 0x6f, 0x69, 0x6e, 0x2f, 0x6d, 0x6f, 0x6e, 0x6f, 0x2f,
	0x6c, 0x69, 0x62, 0x73, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x63, 0x6f, 0x72, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_libs_schema_pkg_core_core_proto_rawDescOnce sync.Once
	file_libs_schema_pkg_core_core_proto_rawDescData []byte
)

func file_libs_schema_pkg_core_core_proto_rawDescGZIP() []byte {
	file_libs_schema_pkg_core_core_proto_rawDescOnce.Do(func() {
		file_libs_schema_pkg_core_core_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_libs_schema_pkg_core_core_proto_rawDesc), len(file_libs_schema_pkg_core_core_proto_rawDesc)))
	})
	return file_libs_schema_pkg_core_core_proto_rawDescData
}

var file_libs_schema_pkg_core_core_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_libs_schema_pkg_core_core_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_libs_schema_pkg_core_core_proto_goTypes = []any{
	(Block_SignatureMode)(0), // 0: flinkcoin.core.Block.SignatureMode
	(Block_BlockType)(0),     // 1: flinkcoin.core.Block.BlockType
	(*Block)(nil),            // 2: flinkcoin.core.Block
	(*PaymentRequest)(nil),   // 3: flinkcoin.core.PaymentRequest
	(*FullBlock)(nil),        // 4: flinkcoin.core.FullBlock
	(*Node)(nil),             // 5: flinkcoin.core.Node
	(*NodeAddress)(nil),      // 6: flinkcoin.core.NodeAddress
	(*Block_PublicKeys)(nil), // 7: flinkcoin.core.Block.PublicKeys
	(*Block_Body)(nil),       // 8: flinkcoin.core.Block.Body
	(*Block_Signatures)(nil), // 9: flinkcoin.core.Block.Signatures
	(*Block_Hash)(nil),       // 10: flinkcoin.core.Block.Hash
	(*Block_Work)(nil),       // 11: flinkcoin.core.Block.Work
}
var file_libs_schema_pkg_core_core_proto_depIdxs = []int32{
	8,  // 0: flinkcoin.core.Block.body:type_name -> flinkcoin.core.Block.Body
	10, // 1: flinkcoin.core.Block.blockHash:type_name -> flinkcoin.core.Block.Hash
	9,  // 2: flinkcoin.core.Block.signatues:type_name -> flinkcoin.core.Block.Signatures
	11, // 3: flinkcoin.core.Block.work:type_name -> flinkcoin.core.Block.Work
	2,  // 4: flinkcoin.core.FullBlock.block:type_name -> flinkcoin.core.Block
	0,  // 5: flinkcoin.core.Block.PublicKeys.singatureMode:type_name -> flinkcoin.core.Block.SignatureMode
	1,  // 6: flinkcoin.core.Block.Body.blockType:type_name -> flinkcoin.core.Block.BlockType
	7,  // 7: flinkcoin.core.Block.Body.publicKeys:type_name -> flinkcoin.core.Block.PublicKeys
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_libs_schema_pkg_core_core_proto_init() }
func file_libs_schema_pkg_core_core_proto_init() {
	if File_libs_schema_pkg_core_core_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_libs_schema_pkg_core_core_proto_rawDesc), len(file_libs_schema_pkg_core_core_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_libs_schema_pkg_core_core_proto_goTypes,
		DependencyIndexes: file_libs_schema_pkg_core_core_proto_depIdxs,
		EnumInfos:         file_libs_schema_pkg_core_core_proto_enumTypes,
		MessageInfos:      file_libs_schema_pkg_core_core_proto_msgTypes,
	}.Build()
	File_libs_schema_pkg_core_core_proto = out.File
	file_libs_schema_pkg_core_core_proto_goTypes = nil
	file_libs_schema_pkg_core_core_proto_depIdxs = nil
}
